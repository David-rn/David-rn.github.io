"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/portfolio-data.ts":
/*!*******************************!*\
  !*** ./lib/portfolio-data.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOutOfScopeResponse: () => (/* binding */ getOutOfScopeResponse),\n/* harmony export */   getPortfolioResponse: () => (/* binding */ getPortfolioResponse),\n/* harmony export */   isQueryInScope: () => (/* binding */ isQueryInScope),\n/* harmony export */   isQueryRelatedTo: () => (/* binding */ isQueryRelatedTo),\n/* harmony export */   portfolioData: () => (/* binding */ portfolioData)\n/* harmony export */ });\n// This file contains all the portfolio data that will be displayed in the chat interface\n// Sample portfolio data\nconst portfolioData = {\n    name: \"David Redó Nieto\",\n    title: \"PhD Candidate\",\n    summary: \"PhD student working on Artificial Intelligence and Computer Vision. \",\n    experiences: [\n        {\n            id: \"exp1\",\n            company: \"Robotnik\",\n            position: \"Robotic Engineer\",\n            duration: \"2017 - 2020\",\n            description: \"Software developer where I designed and implemented control systems for industrial robotics, enhancing automation capabilities for manufacturing clients.\"\n        },\n        {\n            id: \"exp2\",\n            company: \"Nokia Bell Labs (Spain)\",\n            position: \"Summer Internship\",\n            duration: \"2021\",\n            description: \"Completed a summer internship at Nokia Bell Labs developing face recognition algorithms for 360° video conferencing cameras, improving remote participant identification and tracking.\"\n        },\n        {\n            id: \"exp3\",\n            company: \"Vicomtech\",\n            position: \"Researcher\",\n            duration: \"2022 - Present\",\n            description: \"Currently pursuing my PhD at Vicomtech Research Center, where I conduct advanced research in computer vision and AI applications for industrial solutions.\"\n        }\n    ],\n    publications: [\n        {\n            id: \"pub1\",\n            title: \"Securing multimedia-based personal data: towards a methodology for automated anonymization risk assessment seeking GDPR compliance.\",\n            authors: [\n                \"Mikel Aramburu\",\n                \"David Redó\",\n                \"Jorge Garcia-Castaño\"\n            ],\n            journal: \"Journal of Web Engineering\",\n            year: 2022,\n            abstract: \"This paper presents novel techniques for optimizing React applications that scale to millions of users. We introduce a new caching strategy that reduces render times by up to 40% in complex component trees.\",\n            link: \"https://example.com/publication1\"\n        },\n        {\n            id: \"pub2\",\n            title: \"The Future of TypeScript: Trends and Predictions\",\n            authors: [\n                \"Jane Doe\",\n                \"Alice Johnson\"\n            ],\n            journal: \"Programming Language Quarterly\",\n            year: 2021,\n            abstract: \"An analysis of TypeScript's growing adoption and future trajectory in the JavaScript ecosystem. We examine how TypeScript's type system continues to evolve and its impact on developer productivity.\",\n            link: \"https://example.com/publication2\"\n        }\n    ],\n    projects: [\n        {\n            id: \"proj1\",\n            title: \"Modelzilla\",\n            description: \"This library turns any model class into a CLI executable. It is a lightweight Python package that enables developers to transform any AI model into a fully functional Command-Line Interface (CLI) plugin.\",\n            link: \"https://github.com/David-rn/modelzilla\"\n        },\n        {\n            id: \"proj2\",\n            title: \"Supervision\",\n            description: \"Contributed few times in an open-source library for reusable computer vision tools from Roboflow.\",\n            link: \"https://github.com/David-rn/supervision\"\n        }\n    ],\n    education: [\n        {\n            id: \"edu1\",\n            institution: \"Universitat Poliècnica de València\",\n            degree: \"Computer Science\",\n            year: \"2014-2018\"\n        },\n        {\n            id: \"edu2\",\n            institution: \"Université de Bordeaux\",\n            degree: \"MSc Image Processing and Computer Vision\",\n            year: \"2020-2022\"\n        },\n        {\n            id: \"edu3\",\n            institution: \"Universitat Poliècnica de València\",\n            degree: \"PhD Student\",\n            year: \"2024-Present\"\n        }\n    ],\n    contact: {\n        email: \"dredonieto@gmail.com\",\n        linkedin: \"https://www.linkedin.com/in/david-redó-nieto-5a6016138/\",\n        github: \"https://github.com/David-rn\"\n    }\n};\n// Helper function to check if a query is related to a specific topic\nfunction isQueryRelatedTo(query, topic) {\n    const normalizedQuery = query.toLowerCase();\n    const normalizedTopic = topic.toLowerCase();\n    // Check if the query contains the topic\n    if (normalizedQuery.includes(normalizedTopic)) {\n        return true;\n    }\n    // Topic-specific keywords\n    const topicKeywords = {\n        experience: [\n            \"work\",\n            \"job\",\n            \"career\",\n            \"position\",\n            \"employment\",\n            \"company\",\n            \"worked\",\n            \"professional\"\n        ],\n        education: [\n            \"school\",\n            \"university\",\n            \"college\",\n            \"degree\",\n            \"study\",\n            \"studied\",\n            \"academic\",\n            \"graduated\",\n            \"studies\",\n            \"master\",\n            \"phd\",\n            \"educational\"\n        ],\n        publications: [\n            \"paper\",\n            \"article\",\n            \"journal\",\n            \"research\",\n            \"publish\",\n            \"published\",\n            \"author\",\n            \"wrote\",\n            \"written\"\n        ],\n        projects: [\n            \"project\",\n            \"portfolio\",\n            \"built\",\n            \"created\",\n            \"developed\",\n            \"made\",\n            \"application\",\n            \"app\",\n            \"website\"\n        ],\n        contact: [\n            \"contact\",\n            \"email\",\n            \"reach\",\n            \"message\",\n            \"connect\",\n            \"linkedin\",\n            \"github\",\n            \"social\",\n            \"website\",\n            \"twitter\"\n        ],\n        about: [\n            \"about\",\n            \"bio\",\n            \"who\",\n            \"person\",\n            \"introduction\",\n            \"summary\",\n            \"yourself\",\n            \"tell me about\"\n        ]\n    };\n    // Check if the query contains any keywords related to the topic\n    if (topicKeywords[normalizedTopic]) {\n        return topicKeywords[normalizedTopic].some((keyword)=>normalizedQuery.includes(keyword));\n    }\n    return false;\n}\n// Function to determine if a query is within the scope of the portfolio\nfunction isQueryInScope(query) {\n    const topics = [\n        \"experience\",\n        \"education\",\n        \"publications\",\n        \"projects\",\n        \"contact\",\n        \"about\"\n    ];\n    return topics.some((topic)=>isQueryRelatedTo(query, topic));\n}\n// Function to get a response based on the query\nfunction getPortfolioResponse(query) {\n    const normalizedQuery = query.toLowerCase();\n    // Check for general about queries\n    if (isQueryRelatedTo(query, \"about\")) {\n        return \"Hi! I'm \".concat(portfolioData.name, \". \").concat(portfolioData.summary, \" I love doing sports, a marathon from time to time. \");\n    }\n    // Check for experience queries\n    if (isQueryRelatedTo(query, \"experience\")) {\n        let experienceText = \"## Professional Experience\\n\";\n        portfolioData.experiences.forEach((exp, index)=>{\n            experienceText += \"### \".concat(exp.position, \" at \").concat(exp.company, \" (\").concat(exp.duration, \")\\n\");\n            experienceText += \"\".concat(exp.description, \"\\n\");\n            // Add divider if not the last item\n            if (index < portfolioData.experiences.length - 1) {\n                experienceText += \"---\\n\";\n            }\n        });\n        return experienceText;\n    }\n    // Check for education queries\n    if (isQueryRelatedTo(query, \"education\")) {\n        let educationText = \"## Education\\n\";\n        portfolioData.education.forEach((edu, index)=>{\n            educationText += \"### \".concat(edu.degree, \"\\n\");\n            educationText += \"\".concat(edu.institution, \" (\").concat(edu.year, \")\\n\");\n            // Add divider if not the last item\n            if (index < portfolioData.education.length - 1) {\n                educationText += \"---\\n\";\n            }\n        });\n        return educationText;\n    }\n    // Check for publications queries\n    if (isQueryRelatedTo(query, \"publications\")) {\n        let publicationsText = \"## Publications\\n\";\n        portfolioData.publications.forEach((pub, index)=>{\n            publicationsText += '### \"'.concat(pub.title, '\" (').concat(pub.year, \")\\n\");\n            publicationsText += \"**Authors:** \".concat(pub.authors.join(\", \"), \"\\n\");\n            publicationsText += \"**Published in:** \".concat(pub.journal, \"\\n\");\n            publicationsText += \"\".concat(pub.abstract, \"\\n\");\n            if (pub.link) {\n                publicationsText += \"\\n**Link:** \".concat(pub.link, \"\\n\");\n            }\n            // Add divider if not the last item\n            if (index < portfolioData.publications.length - 1) {\n                publicationsText += \"---\\n\";\n            }\n        });\n        return publicationsText;\n    }\n    // Check for projects queries\n    if (isQueryRelatedTo(query, \"projects\")) {\n        let projectsText = \"## Projects\\n\";\n        portfolioData.projects.forEach((proj, index)=>{\n            projectsText += \"### \".concat(proj.title, \"\\n\");\n            projectsText += \"\".concat(proj.description, \"\\n\");\n            if (proj.link) {\n                projectsText += \"\\n**Link:** [\".concat(proj.link, \"](\").concat(proj.link, \")\\n\");\n            }\n            // Add divider if not the last item\n            if (index < portfolioData.projects.length - 1) {\n                projectsText += \"---\\n\";\n            }\n        });\n        return projectsText;\n    }\n    // Check for contact queries\n    if (isQueryRelatedTo(query, \"contact\")) {\n        const contact = portfolioData.contact;\n        let contactText = \"## Contact Information\\n\";\n        if (contact.email) contactText += \"**Email:** \".concat(contact.email, \"\\n\");\n        if (contact.linkedin) contactText += \"**LinkedIn:** [\".concat(contact.linkedin, \"](\").concat(contact.linkedin, \")\\n\");\n        if (contact.github) contactText += \"**GitHub:** [\".concat(contact.github, \"](\").concat(contact.github, \")\\n\");\n        return contactText;\n    }\n    // If we get here, the query is technically in scope but not specifically matched\n    return \"I'm not sure what specific information you're looking for about my portfolio. You can ask me about my experience, education, publications, projects, or contact information.\";\n}\n// Function to get the out of scope response\nfunction getOutOfScopeResponse() {\n    return \"I'm sorry, but I can only provide information about my professional portfolio, including my experience, education, publications, projects, and contact information. If you have questions about any of these topics, I'd be happy to help!\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/portfolio-data.ts\n"));

/***/ })

});